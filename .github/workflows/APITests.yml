name: Automated API tests using Postman CLI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
  workflow_dispatch:

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Set environment variable for testing (ASPNETCORE_ENVIRONMENT)
        run: echo "ASPNETCORE_ENVIRONMENT=Test" >> $GITHUB_ENV

      - name: Setup Backend Server
        run: |
          # Start the backend in the background
              nohup dotnet run --project ./Backend/Presentation-Kattencafe &> backend.log &

              # Wait for the backend to be fully initialized
              timeout=300
              end=$((SECONDS+timeout))
              while [ $SECONDS -lt $end ]; do
                curl --insecure https://localhost:5018/swagger/index.html && break
                echo "Waiting for backend to be ready..."
                sleep 5
              done

              if [ $SECONDS -ge $end ]; then
                echo "Backend did not start in time."
                cat backend.log  # Display backend logs for debugging
                exit 1
              fi

      

      - name: Setup Frotend Server
        run: |
                  # Change to the frontend directory
                  cd ./Frontend-Admin

                  # Install frontend dependencies
                  pnpm install

                  # Start the frontend in the background
                  nohup pnpm start &> frontend.log &

                  # Wait for the frontend to be fully initialized
                  timeout=600
                  end=$((SECONDS+timeout))
                  while [ $SECONDS -lt $end ]; do
                    curl http://localhost:3000 && break
                    echo "Waiting for frontend to be ready..."
                    sleep 5
                  done

                  if [ $SECONDS -ge $end ]; then
                    echo "Frontend did not start in time."
                    cat frontend.log  # Display frontend logs for debugging
                    exit 1
                  fi
      
    
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "40250504-debcd5ce-06e2-4fb3-a1f0-9f87c3169c91"
